AWSTemplateFormatVersion: "2010-09-09"
Description: "This template creates all API Gateways"
Parameters:
  CostCenter:
    Type: String
    Description: "The name of the CostCenter"

Resources:
  CostCenterRESTAPI:
    Type : AWS::ApiGateway::RestApi
    Properties :
      Name : !Sub RESTAPI.${CostCenter}
      Description: "REST API"
      Body:
        !Sub |
          openapi: "3.0.1"
          info:
            title: "RESTAPI.${CostCenter}"
            description: "Central API"
            version: "2021-01-11T00:00:00Z"
          servers:
          - url: "https://t.execute-api.${AWS::Region}.amazonaws.com/{basePath}"
            variables:
              basePath:
                default: "/prod"
          paths:
            /access:
              get:
                parameters:
                - name: "bucket"
                  in: "query"
                  required: true
                  schema:
                    type: "string"
                - name: "key"
                  in: "query"
                  required: true
                  schema:
                    type: "string"
                - name: "operation"
                  in: "query"
                  required: true
                  schema:
                    type: "string"
                responses:
                  "400":
                    description: "400 response"
                    content:
                      application/json:
                        schema:
                          $ref: "#/components/schemas/Error"
                  "200":
                    description: "200 response"
                    content:
                      application/json:
                        schema:
                          $ref: "#/components/schemas/Empty"
                  "502":
                    description: "502 response"
                    content:
                      application/json:
                        schema:
                          $ref: "#/components/schemas/Error"
                x-amazon-apigateway-request-validator: "Validate query string parameters and\
                  \ headers"
                x-amazon-apigateway-integration:
                  uri: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:LambdaCreateS3PreSignedURL-${CostCenter}:${!stageVariables.lambdaAlias}/invocations"
                  responses:
                    default:
                      statusCode: "200"
                      responseTemplates:
                        application/json: "#set($inputRoot = $input.path('$'))\n$input.json(\"\
                          $\")\n#if($inputRoot.toString().contains(\"stackTrace\"))\n#set($context.responseOverride.status\
                          \ = 500)\n#end"
                    .*Error.*:
                      statusCode: "400"
                      responseTemplates:
                        application/json: "{\n    \"errorMessage\": $input.path('$.errorMessage')\n\
                          }"
                    .*Exception.*:
                      statusCode: "502"
                      responseTemplates:
                        application/json: "{\n    \"errorMessage\": $input.path('$.errorMessage')\n\
                          }"
                  requestTemplates:
                    application/json: "{\n    \"bucket\":   \"$input.params('bucket')\",\n \
                      \   \"key\":      \"$input.params('key')\",\n    \"operation\":\"$input.params('operation')\"\
                      \n}"
                  passthroughBehavior: "when_no_templates"
                  httpMethod: "POST"
                  contentHandling: "CONVERT_TO_TEXT"
                  type: "aws"
          components:
            schemas:
              Empty:
                title: "Empty Schema"
                type: "object"
              Error:
                title: "Error Schema"
                type: "object"
                properties:
                  message:
                    type: "string"
          x-amazon-apigateway-request-validators:
            Validate query string parameters and headers:
              validateRequestParameters: true
              validateRequestBody: false
            Validate body, query string parameters, and headers:
              validateRequestParameters: true
              validateRequestBody: true
          x-amazon-apigateway-documentation:
            version: "1"
            createdDate: "2021-01-11T00:00:00Z"
            documentationParts:
            - location:
                type: "API"
              properties:
                description: "Central API"
            - location:
                type: "METHOD"
                path: "/access"
                method: "GET"
              properties:
                invocation: "?bucket=bucket name\
                  \ &key=key name\
                  \ &operation=read or write"
                response: "type application/json"
            - location:
                type: "RESOURCE"
                path: "/access"
              properties:
                description: "This resource gives read or write access to a S3 keyyyy"
      Parameters:
        endpointConfigurationTypes: REGIONAL
      EndpointConfiguration:
        Types:
        - REGIONAL
      Tags:
        - Key: CostCenter
          Value: !Ref CostCenter
  CostCenterRESTAPIDeployment:
    Type: "AWS::ApiGateway::Deployment"
    Properties:
      RestApiId: !Ref CostCenterRESTAPI
  CostCenterRESTAPIProdStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: prod
      Description: Production Stage
      RestApiId: !Ref CostCenterRESTAPI
      DeploymentId: !Ref CostCenterRESTAPIDeployment
      MethodSettings:
        - ResourcePath: /~1access
          HttpMethod: GET
      Variables:
        lambdaAlias: PROD
  CostCenterRESTAPIDevStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: dev
      Description: Development Stage
      RestApiId: !Ref CostCenterRESTAPI
      DeploymentId: !Ref CostCenterRESTAPIDeployment
      MethodSettings:
        - ResourcePath: /~1access
          HttpMethod: GET
      Variables:
        lambdaAlias: DEVEL

Outputs:
  CostCenterRESTAPIProdEndpointUrl:
      Description: "CostCenterRESTAPI Stage Endpoint Url"
      Value: !Sub "https://${CostCenterRESTAPI}.execute-api.${AWS::Region}.amazonaws.com/${CostCenterRESTAPIProdStage}"
      Export:
        Name: !Sub "${CostCenter}-shared-CostCenterRESTAPIProdEndpointUrl"
  CostCenterRESTAPIDevEndpointUrl:
      Description: "CostCenterRESTAPI Stage Endpoint Url"
      Value: !Sub "https://${CostCenterRESTAPI}.execute-api.${AWS::Region}.amazonaws.com/${CostCenterRESTAPIDevStage}"
      Export:
        Name: !Sub "${CostCenter}-shared-CostCenterRESTAPIDevEndpointUrl"
